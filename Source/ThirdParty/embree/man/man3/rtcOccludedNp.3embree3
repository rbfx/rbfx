.\" Automatically generated by Pandoc 2.5
.\"
.TH "rtcOccludedNp" "3" "" "" "Embree Ray Tracing Kernels 3"
.hy
.SS NAME
.IP
.nf
\f[C]
rtcOccludedNp \- finds any hits for a SOA ray stream of size N
\f[R]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include <embree3/rtcore.h>

void rtcOccludedNp(
  RTCScene scene,
  struct RTCIntersectContext* context,
  struct RTCRayNp* ray,
  unsigned int N
);
\f[R]
.fi
.SS DESCRIPTION
.PP
The \f[C]rtcOccludedNp\f[R] function checks whether there are any hits
for a SOA ray stream (\f[C]ray\f[R] argument) of size \f[C]N\f[R]
(basically a large ray packet) with the scene (\f[C]scene\f[R]
argument).
The \f[C]ray\f[R] argument points to a structure of pointers with one
pointer for each ray component.
Each of these pointers points to an array with the ray component data
for each ray.
This way the individual components of the SOA ray stream do not need to
be stored sequentially in memory, which makes it possible to have large
varying size ray packets in SOA layout.
See Section [rtcOccluded1] for a description of how to set up and trace
occlusion rays.
.IP
.nf
\f[C]
\f[R]
.fi
.IP
.nf
\f[C]
\f[R]
.fi
.PP
A ray in a ray stream is considered inactive if its \f[C]tnear\f[R]
value is larger than its \f[C]tfar\f[R] value.
.PP
The stream size \f[C]N\f[R] can be an arbitrary positive integer
including 0.
Each ray component array must be aligned to 16 bytes.
.SS EXIT STATUS
.PP
For performance reasons this function does not do any error checks, thus
will not set any error flags on failure.
.SS SEE ALSO
.PP
[rtcIntersectNp]
