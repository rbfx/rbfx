%constant const char* BloomLuminanceweights = "LuminanceWeights";
%ignore Urho3D::Bloom_LuminanceWeights;
%constant const char* BloomThreshold = "Threshold";
%ignore Urho3D::Bloom_Threshold;
%constant const char* BloomInputinvsize = "InputInvSize";
%ignore Urho3D::Bloom_InputInvSize;
%constant const char* BloomIntensity = "Intensity";
%ignore Urho3D::Bloom_Intensity;
%constant const char* FrameDeltatime = "DeltaTime";
%ignore Urho3D::ShaderConsts::Frame_DeltaTime;
%constant const char* FrameElapsedtime = "ElapsedTime";
%ignore Urho3D::ShaderConsts::Frame_ElapsedTime;
%constant const char* CameraView = "View";
%ignore Urho3D::ShaderConsts::Camera_View;
%constant const char* CameraViewinv = "ViewInv";
%ignore Urho3D::ShaderConsts::Camera_ViewInv;
%constant const char* CameraViewproj = "ViewProj";
%ignore Urho3D::ShaderConsts::Camera_ViewProj;
%constant const char* CameraClipplane = "ClipPlane";
%ignore Urho3D::ShaderConsts::Camera_ClipPlane;
%constant const char* CameraCamerapos = "CameraPos";
%ignore Urho3D::ShaderConsts::Camera_CameraPos;
%constant const char* CameraNearclip = "NearClip";
%ignore Urho3D::ShaderConsts::Camera_NearClip;
%constant const char* CameraFarclip = "FarClip";
%ignore Urho3D::ShaderConsts::Camera_FarClip;
%constant const char* CameraDepthmode = "DepthMode";
%ignore Urho3D::ShaderConsts::Camera_DepthMode;
%constant const char* CameraFrustumsize = "FrustumSize";
%ignore Urho3D::ShaderConsts::Camera_FrustumSize;
%constant const char* CameraGbufferoffsets = "GBufferOffsets";
%ignore Urho3D::ShaderConsts::Camera_GBufferOffsets;
%constant const char* CameraDepthreconstruct = "DepthReconstruct";
%ignore Urho3D::ShaderConsts::Camera_DepthReconstruct;
%constant const char* CameraGbufferinvsize = "GBufferInvSize";
%ignore Urho3D::ShaderConsts::Camera_GBufferInvSize;
%constant const char* CameraAmbientcolor = "AmbientColor";
%ignore Urho3D::ShaderConsts::Camera_AmbientColor;
%constant const char* CameraFogparams = "FogParams";
%ignore Urho3D::ShaderConsts::Camera_FogParams;
%constant const char* CameraFogcolor = "FogColor";
%ignore Urho3D::ShaderConsts::Camera_FogColor;
%constant const char* CameraNormaloffsetscale = "NormalOffsetScale";
%ignore Urho3D::ShaderConsts::Camera_NormalOffsetScale;
%constant const char* ZoneCubemapcenter0 = "CubemapCenter0";
%ignore Urho3D::ShaderConsts::Zone_CubemapCenter0;
%constant const char* ZoneCubemapcenter1 = "CubemapCenter1";
%ignore Urho3D::ShaderConsts::Zone_CubemapCenter1;
%constant const char* ZoneProjectionboxmin0 = "ProjectionBoxMin0";
%ignore Urho3D::ShaderConsts::Zone_ProjectionBoxMin0;
%constant const char* ZoneProjectionboxmin1 = "ProjectionBoxMin1";
%ignore Urho3D::ShaderConsts::Zone_ProjectionBoxMin1;
%constant const char* ZoneProjectionboxmax0 = "ProjectionBoxMax0";
%ignore Urho3D::ShaderConsts::Zone_ProjectionBoxMax0;
%constant const char* ZoneProjectionboxmax1 = "ProjectionBoxMax1";
%ignore Urho3D::ShaderConsts::Zone_ProjectionBoxMax1;
%constant const char* ZoneRoughnesstolodfactor0 = "RoughnessToLODFactor0";
%ignore Urho3D::ShaderConsts::Zone_RoughnessToLODFactor0;
%constant const char* ZoneRoughnesstolodfactor1 = "RoughnessToLODFactor1";
%ignore Urho3D::ShaderConsts::Zone_RoughnessToLODFactor1;
%constant const char* ZoneReflectionblendfactor = "ReflectionBlendFactor";
%ignore Urho3D::ShaderConsts::Zone_ReflectionBlendFactor;
%constant const char* LightLightpos = "LightPos";
%ignore Urho3D::ShaderConsts::Light_LightPos;
%constant const char* LightLightdir = "LightDir";
%ignore Urho3D::ShaderConsts::Light_LightDir;
%constant const char* LightSpotangle = "SpotAngle";
%ignore Urho3D::ShaderConsts::Light_SpotAngle;
%constant const char* LightLightshapematrix = "LightShapeMatrix";
%ignore Urho3D::ShaderConsts::Light_LightShapeMatrix;
%constant const char* LightVertexlights = "VertexLights";
%ignore Urho3D::ShaderConsts::Light_VertexLights;
%constant const char* LightLightmatrices = "LightMatrices";
%ignore Urho3D::ShaderConsts::Light_LightMatrices;
%constant const char* LightLightcolor = "LightColor";
%ignore Urho3D::ShaderConsts::Light_LightColor;
%constant const char* LightShadowcubeadjust = "ShadowCubeAdjust";
%ignore Urho3D::ShaderConsts::Light_ShadowCubeAdjust;
%constant const char* LightShadowcubeuvbias = "ShadowCubeUVBias";
%ignore Urho3D::ShaderConsts::Light_ShadowCubeUVBias;
%constant const char* LightShadowdepthfade = "ShadowDepthFade";
%ignore Urho3D::ShaderConsts::Light_ShadowDepthFade;
%constant const char* LightShadowintensity = "ShadowIntensity";
%ignore Urho3D::ShaderConsts::Light_ShadowIntensity;
%constant const char* LightShadowmapinvsize = "ShadowMapInvSize";
%ignore Urho3D::ShaderConsts::Light_ShadowMapInvSize;
%constant const char* LightShadowsplits = "ShadowSplits";
%ignore Urho3D::ShaderConsts::Light_ShadowSplits;
%constant const char* LightVsmshadowparams = "VSMShadowParams";
%ignore Urho3D::ShaderConsts::Light_VSMShadowParams;
%constant const char* LightLightrad = "LightRad";
%ignore Urho3D::ShaderConsts::Light_LightRad;
%constant const char* LightLightlength = "LightLength";
%ignore Urho3D::ShaderConsts::Light_LightLength;
%constant const char* MaterialUoffset = "UOffset";
%ignore Urho3D::ShaderConsts::Material_UOffset;
%constant const char* MaterialVoffset = "VOffset";
%ignore Urho3D::ShaderConsts::Material_VOffset;
%constant const char* MaterialLmoffset = "LMOffset";
%ignore Urho3D::ShaderConsts::Material_LMOffset;
%constant const char* MaterialMatdiffcolor = "MatDiffColor";
%ignore Urho3D::ShaderConsts::Material_MatDiffColor;
%constant const char* MaterialMatemissivecolor = "MatEmissiveColor";
%ignore Urho3D::ShaderConsts::Material_MatEmissiveColor;
%constant const char* MaterialRoughness = "Roughness";
%ignore Urho3D::ShaderConsts::Material_Roughness;
%constant const char* MaterialMatenvmapcolor = "MatEnvMapColor";
%ignore Urho3D::ShaderConsts::Material_MatEnvMapColor;
%constant const char* MaterialMetallic = "Metallic";
%ignore Urho3D::ShaderConsts::Material_Metallic;
%constant const char* MaterialMatspeccolor = "MatSpecColor";
%ignore Urho3D::ShaderConsts::Material_MatSpecColor;
%constant const char* MaterialFadeoffsetscale = "FadeOffsetScale";
%ignore Urho3D::ShaderConsts::Material_FadeOffsetScale;
%constant const char* MaterialNormalscale = "NormalScale";
%ignore Urho3D::ShaderConsts::Material_NormalScale;
%constant const char* MaterialDielectricreflectance = "DielectricReflectance";
%ignore Urho3D::ShaderConsts::Material_DielectricReflectance;
%constant const char* CustomOutlinecolor = "OutlineColor";
%ignore Urho3D::ShaderConsts::Custom_OutlineColor;
%constant const char* ObjectModel = "Model";
%ignore Urho3D::ShaderConsts::Object_Model;
%constant const char* ObjectShar = "SHAr";
%ignore Urho3D::ShaderConsts::Object_SHAr;
%constant const char* ObjectShag = "SHAg";
%ignore Urho3D::ShaderConsts::Object_SHAg;
%constant const char* ObjectShab = "SHAb";
%ignore Urho3D::ShaderConsts::Object_SHAb;
%constant const char* ObjectShbr = "SHBr";
%ignore Urho3D::ShaderConsts::Object_SHBr;
%constant const char* ObjectShbg = "SHBg";
%ignore Urho3D::ShaderConsts::Object_SHBg;
%constant const char* ObjectShbb = "SHBb";
%ignore Urho3D::ShaderConsts::Object_SHBb;
%constant const char* ObjectShc = "SHC";
%ignore Urho3D::ShaderConsts::Object_SHC;
%constant const char* ObjectAmbient = "Ambient";
%ignore Urho3D::ShaderConsts::Object_Ambient;
%constant const char* ObjectBillboardrot = "BillboardRot";
%ignore Urho3D::ShaderConsts::Object_BillboardRot;
%constant const char* ObjectSkinmatrices = "SkinMatrices";
%ignore Urho3D::ShaderConsts::Object_SkinMatrices;
%constant const char* Albedo = "Albedo";
%ignore Urho3D::ShaderResources::Albedo;
%constant const char* Normal = "Normal";
%ignore Urho3D::ShaderResources::Normal;
%constant const char* Properties = "Properties";
%ignore Urho3D::ShaderResources::Properties;
%constant const char* Emission = "Emission";
%ignore Urho3D::ShaderResources::Emission;
%constant const char* Reflection0 = "Reflection0";
%ignore Urho3D::ShaderResources::Reflection0;
%constant const char* Reflection1 = "Reflection1";
%ignore Urho3D::ShaderResources::Reflection1;
%constant const char* LightRamp = "LightRamp";
%ignore Urho3D::ShaderResources::LightRamp;
%constant const char* LightShape = "LightShape";
%ignore Urho3D::ShaderResources::LightShape;
%constant const char* ShadowMap = "ShadowMap";
%ignore Urho3D::ShaderResources::ShadowMap;
%constant const char* DepthBuffer = "DepthBuffer";
%ignore Urho3D::ShaderResources::DepthBuffer;
%csconstvalue("0") Urho3D::DrawableProcessorPassFlag::None;
%csconstvalue("1") Urho3D::DrawableProcessorPassFlag::HasAmbientLighting;
%csconstvalue("2") Urho3D::DrawableProcessorPassFlag::DisableInstancing;
%csconstvalue("4") Urho3D::DrawableProcessorPassFlag::DeferredLightMaskToStencil;
%csconstvalue("8") Urho3D::DrawableProcessorPassFlag::NeedReadableDepth;
%csconstvalue("16") Urho3D::DrawableProcessorPassFlag::RefractionPass;
%csconstvalue("32") Urho3D::DrawableProcessorPassFlag::DepthOnlyPass;
%csconstvalue("64") Urho3D::DrawableProcessorPassFlag::ReadOnlyDepth;
%csconstvalue("128") Urho3D::DrawableProcessorPassFlag::StereoInstancing;
%csconstvalue("256") Urho3D::DrawableProcessorPassFlag::BatchCallback;
%csconstvalue("512") Urho3D::DrawableProcessorPassFlag::PipelineStateCallback;
%typemap(csattributes) Urho3D::DrawableProcessorPassFlag "[global::System.Flags]";
using DrawableProcessorPassFlags = Urho3D::DrawableProcessorPassFlag;
%typemap(ctype) DrawableProcessorPassFlags "size_t";
%typemap(out) DrawableProcessorPassFlags "$result = (size_t)$1.AsInteger();"
%csconstvalue("0") Urho3D::BatchRenderFlag::None;
%csconstvalue("1") Urho3D::BatchRenderFlag::EnableAmbientLighting;
%csconstvalue("2") Urho3D::BatchRenderFlag::EnableVertexLights;
%csconstvalue("4") Urho3D::BatchRenderFlag::EnablePixelLights;
%csconstvalue("8") Urho3D::BatchRenderFlag::EnableInstancingForStaticGeometry;
%csconstvalue("16") Urho3D::BatchRenderFlag::DisableColorOutput;
%csconstvalue("32") Urho3D::BatchRenderFlag::LightMaskToStencil;
%csconstvalue("64") Urho3D::BatchRenderFlag::LinearColorSpace;
%csconstvalue("3") Urho3D::BatchRenderFlag::EnableAmbientAndVertexLighting;
%typemap(csattributes) Urho3D::BatchRenderFlag "[global::System.Flags]";
using BatchRenderFlags = Urho3D::BatchRenderFlag;
%typemap(ctype) BatchRenderFlags "size_t";
%typemap(out) BatchRenderFlags "$result = (size_t)$1.AsInteger();"
%typemap(csattributes) Urho3D::RenderBufferFlag "[global::System.Flags]";
using RenderBufferFlags = Urho3D::RenderBufferFlag;
%typemap(ctype) RenderBufferFlags "size_t";
%typemap(out) RenderBufferFlags "$result = (size_t)$1.AsInteger();"
%csconstvalue("0") Urho3D::RenderOutputFlag::None;
%csconstvalue("1") Urho3D::RenderOutputFlag::NeedColorOutputReadAndWrite;
%csconstvalue("2") Urho3D::RenderOutputFlag::NeedColorOutputBilinear;
%typemap(csattributes) Urho3D::RenderOutputFlag "[global::System.Flags]";
using RenderOutputFlags = Urho3D::RenderOutputFlag;
%typemap(ctype) RenderOutputFlags "size_t";
%typemap(out) RenderOutputFlags "$result = (size_t)$1.AsInteger();"
%csconstvalue("1") Urho3D::GeometryRenderFlag::VisibleInCullCamera;
%csconstvalue("2") Urho3D::GeometryRenderFlag::Lit;
%csconstvalue("4") Urho3D::GeometryRenderFlag::ForwardLit;
%csconstvalue("0") Urho3D::BatchCompositor::ShadowSubpass;
%csattribute(Urho3D::SceneProcessorSettings, %arg(bool), IsDeferredLighting, IsDeferredLighting);
%csattribute(Urho3D::RenderPipelineDebugger, %arg(Urho3D::DebugFrameSnapshot), Snapshot, GetSnapshot);
%csattribute(Urho3D::RenderPipelineView, %arg(Urho3D::RenderPipeline *), RenderPipeline, GetRenderPipeline);
%csattribute(Urho3D::RenderPipeline, %arg(Urho3D::RenderPipelineSettings), Settings, GetSettings, SetSettings);
%csattribute(Urho3D::TextureRenderBuffer, %arg(Urho3D::RawTexture *), Texture, GetTexture);
%csattribute(Urho3D::TextureRenderBuffer, %arg(Urho3D::IntRect), ViewportRect, GetViewportRect);
%csattribute(Urho3D::ViewportColorRenderBuffer, %arg(Urho3D::RawTexture *), Texture, GetTexture);
%csattribute(Urho3D::ViewportColorRenderBuffer, %arg(Urho3D::IntRect), ViewportRect, GetViewportRect);
%csattribute(Urho3D::ViewportDepthStencilRenderBuffer, %arg(Urho3D::RawTexture *), Texture, GetTexture);
%csattribute(Urho3D::ViewportDepthStencilRenderBuffer, %arg(Urho3D::IntRect), ViewportRect, GetViewportRect);
%csattribute(Urho3D::AmbientOcclusionPass, %arg(Urho3D::RenderOutputFlags), ExecutionFlags, GetExecutionFlags);
%csattribute(Urho3D::AutoExposurePass, %arg(Urho3D::RenderOutputFlags), ExecutionFlags, GetExecutionFlags);
%csattribute(Urho3D::LightAccumulator, %arg(Urho3D::LightAccumulator::VertexLightContainer), VertexLights, GetVertexLights);
%csattribute(Urho3D::LightAccumulator, %arg(ea::span<const LightData>), PixelLights, GetPixelLights);
%csattribute(Urho3D::LightAccumulator, %arg(unsigned int), VertexLightsHash, GetVertexLightsHash);
%csattribute(Urho3D::DrawableProcessorPass, %arg(bool), IsEnabled, IsEnabled, SetEnabled);
%csattribute(Urho3D::DrawableProcessorPass, %arg(Urho3D::DrawableProcessorPassFlags), Flags, GetFlags);
%csattribute(Urho3D::DrawableProcessor, %arg(Urho3D::FrameInfo), FrameInfo, GetFrameInfo);
%csattribute(Urho3D::DrawableProcessor, %arg(Urho3D::DrawableProcessorSettings), Settings, GetSettings, SetSettings);
%csattribute(Urho3D::DrawableProcessor, %arg(ea::vector<SortedOccluder>), Occluders, GetOccluders);
%csattribute(Urho3D::DrawableProcessor, %arg(WorkQueueVector<Urho3D::Drawable *>), Geometries, GetGeometries);
%csattribute(Urho3D::DrawableProcessor, %arg(Urho3D::FloatRange), SceneZRange, GetSceneZRange);
%csattribute(Urho3D::DrawableProcessor, %arg(ea::vector<Light *>), Lights, GetLights);
%csattribute(Urho3D::DrawableProcessor, %arg(ea::vector<LightProcessor *>), LightProcessors, GetLightProcessors);
%csattribute(Urho3D::DrawableProcessor, %arg(ea::vector<LightProcessor *>), LightProcessorsByShadowMap, GetLightProcessorsByShadowMap);
%csattribute(Urho3D::InstancingBuffer, %arg(unsigned int), NextInstanceIndex, GetNextInstanceIndex);
%csattribute(Urho3D::InstancingBuffer, %arg(Urho3D::InstancingBufferSettings), Settings, GetSettings, SetSettings);
%csattribute(Urho3D::InstancingBuffer, %arg(Urho3D::VertexBuffer *), VertexBuffer, GetVertexBuffer);
%csattribute(Urho3D::InstancingBuffer, %arg(bool), IsEnabled, IsEnabled);
%csattribute(Urho3D::PipelineBatch, %arg(Urho3D::SourceBatch), SourceBatch, GetSourceBatch);
%csattribute(Urho3D::PipelineBatchDesc, %arg(Urho3D::BatchStateCreateKey), Key, GetKey);
%csattribute(Urho3D::BatchCompositor, %arg(ea::vector<PipelineBatchByState>), LightVolumeBatches, GetLightVolumeBatches);
%csattribute(Urho3D::BloomPass, %arg(Urho3D::RenderOutputFlags), ExecutionFlags, GetExecutionFlags);
%csattribute(Urho3D::CameraProcessor, %arg(unsigned int), PipelineStateHash, GetPipelineStateHash);
%csattribute(Urho3D::CameraProcessor, %arg(bool), IsCameraReversed, IsCameraReversed);
%csattribute(Urho3D::CameraProcessor, %arg(bool), IsCameraOrthographic, IsCameraOrthographic);
%csattribute(Urho3D::CameraProcessor, %arg(bool), IsCameraClipped, IsCameraClipped);
%csattribute(Urho3D::CameraProcessor, %arg(Urho3D::FillMode), CameraFillMode, GetCameraFillMode);
%csattribute(Urho3D::PipelineStateBuilder, %arg(Urho3D::ShaderProgramCompositor *), ShaderProgramCompositor, GetShaderProgramCompositor);
%csattribute(Urho3D::UnorderedScenePass, %arg(PipelineBatchGroup<Urho3D::PipelineBatchByState>), DeferredBatches, GetDeferredBatches);
%csattribute(Urho3D::UnorderedScenePass, %arg(PipelineBatchGroup<Urho3D::PipelineBatchByState>), BaseBatches, GetBaseBatches);
%csattribute(Urho3D::UnorderedScenePass, %arg(PipelineBatchGroup<Urho3D::PipelineBatchByState>), LightBatches, GetLightBatches);
%csattribute(Urho3D::BackToFrontScenePass, %arg(PipelineBatchGroup<Urho3D::PipelineBatchBackToFront>), Batches, GetBatches);
%csattribute(Urho3D::OutlineScenePass, %arg(PipelineBatchGroup<Urho3D::PipelineBatchByState>), Batches, GetBatches);
%csattribute(Urho3D::SceneProcessor, %arg(Urho3D::SceneProcessorSettings), Settings, GetSettings);
%csattribute(Urho3D::SceneProcessor, %arg(Urho3D::FrameInfo), FrameInfo, GetFrameInfo);
%csattribute(Urho3D::SceneProcessor, %arg(ea::vector<PipelineBatchByState>), LightVolumeBatches, GetLightVolumeBatches);
%csattribute(Urho3D::SceneProcessor, %arg(Urho3D::CameraProcessor *), CameraProcessor, GetCameraProcessor);
%csattribute(Urho3D::SceneProcessor, %arg(Urho3D::PipelineStateBuilder *), PipelineStateBuilder, GetPipelineStateBuilder);
%csattribute(Urho3D::SceneProcessor, %arg(Urho3D::DrawableProcessor *), DrawableProcessor, GetDrawableProcessor);
%csattribute(Urho3D::SceneProcessor, %arg(Urho3D::BatchCompositor *), BatchCompositor, GetBatchCompositor);
%csattribute(Urho3D::SceneProcessor, %arg(Urho3D::BatchRenderer *), BatchRenderer, GetBatchRenderer);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::RenderBuffer *), DepthStencilOutput, GetDepthStencilOutput);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::RenderBuffer *), ColorOutput, GetColorOutput);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::RawTexture *), DepthStencilTexture, GetDepthStencilTexture);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::RawTexture *), SecondaryColorTexture, GetSecondaryColorTexture);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::IntVector2), OutputSize, GetOutputSize);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::Vector2), InvOutputSize, GetInvOutputSize);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::Vector4), DefaultClipToUVSpaceOffsetAndScale, GetDefaultClipToUVSpaceOffsetAndScale);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::TextureFormat), OutputColorFormat, GetOutputColorFormat);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::TextureFormat), OutputDepthStencilFormat, GetOutputDepthStencilFormat);
%csattribute(Urho3D::RenderBufferManager, %arg(bool), IsLinearColorSpace, IsLinearColorSpace);
%csattribute(Urho3D::RenderBufferManager, %arg(unsigned int), OutputMultiSample, GetOutputMultiSample);
%csattribute(Urho3D::RenderBufferManager, %arg(Urho3D::RenderBufferManagerSettings), Settings, GetSettings, SetSettings);
%csattribute(Urho3D::DefaultRenderPipelineView, %arg(Urho3D::RenderPipelineSettings), Settings, GetSettings, SetSettings);
%csattribute(Urho3D::DefaultRenderPipelineView, %arg(Urho3D::FrameInfo), FrameInfo, GetFrameInfo);
%csattribute(Urho3D::DefaultRenderPipelineView, %arg(Urho3D::RenderPipelineStats), Stats, GetStats);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(Urho3D::LightProcessor *), LightProcessor, GetLightProcessor);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(Urho3D::Light *), Light, GetLight);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(unsigned int), SplitIndex, GetSplitIndex);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(ea::vector<Drawable *>), ShadowCasters, GetShadowCasters);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(Urho3D::ShadowMapRegion), ShadowMap, GetShadowMap);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(float), ShadowMapTexelSizeInWorldSpace, GetShadowMapTexelSizeInWorldSpace);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(unsigned int), ShadowMapPadding, GetShadowMapPadding);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(Urho3D::FloatRange), CascadeZRange, GetCascadeZRange);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(Urho3D::Camera *), ShadowCamera, GetShadowCamera);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(ea::vector<PipelineBatch>), MutableUnsortedShadowBatches, GetMutableUnsortedShadowBatches);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(PipelineBatchGroup<Urho3D::PipelineBatchByState>), MutableShadowBatches, GetMutableShadowBatches);
%csattribute(Urho3D::ShadowSplitProcessor, %arg(PipelineBatchGroup<Urho3D::PipelineBatchByState>), ShadowBatches, GetShadowBatches);
%csattribute(Urho3D::LightProcessor, %arg(unsigned int), ForwardLitHash, GetForwardLitHash);
%csattribute(Urho3D::LightProcessor, %arg(unsigned int), LightVolumeHash, GetLightVolumeHash);
%csattribute(Urho3D::LightProcessor, %arg(Urho3D::Light *), Light, GetLight);
%csattribute(Urho3D::LightProcessor, %arg(ea::vector<Drawable *>), LitGeometries, GetLitGeometries);
%csattribute(Urho3D::LightProcessor, %arg(Urho3D::IntVector2), ShadowMapSize, GetShadowMapSize);
%csattribute(Urho3D::LightProcessor, %arg(unsigned int), NumSplits, GetNumSplits);
%csattribute(Urho3D::LightProcessor, %arg(ea::span<const ShadowSplitProcessor>), Splits, GetSplits);
%csattribute(Urho3D::LightProcessor, %arg(ea::span<ShadowSplitProcessor>), MutableSplits, GetMutableSplits);
%csattribute(Urho3D::LightProcessor, %arg(Urho3D::ShadowMapRegion), ShadowMap, GetShadowMap);
%csattribute(Urho3D::LightProcessor, %arg(Urho3D::CookedLightParams), Params, GetParams);
%csattribute(Urho3D::LightmapRenderPipelineView, %arg(Urho3D::RawTexture *), PositionBuffer, GetPositionBuffer);
%csattribute(Urho3D::LightmapRenderPipelineView, %arg(Urho3D::RawTexture *), SmoothPositionBuffer, GetSmoothPositionBuffer);
%csattribute(Urho3D::LightmapRenderPipelineView, %arg(Urho3D::RawTexture *), FaceNormalBuffer, GetFaceNormalBuffer);
%csattribute(Urho3D::LightmapRenderPipelineView, %arg(Urho3D::RawTexture *), SmoothNormalBuffer, GetSmoothNormalBuffer);
%csattribute(Urho3D::LightmapRenderPipelineView, %arg(Urho3D::RawTexture *), AlbedoBuffer, GetAlbedoBuffer);
%csattribute(Urho3D::LightmapRenderPipelineView, %arg(Urho3D::RawTexture *), EmissionBuffer, GetEmissionBuffer);
%csattribute(Urho3D::ShadowMapAllocator, %arg(Urho3D::ShadowMapAllocatorSettings), Settings, GetSettings, SetSettings);
%csattribute(Urho3D::ShadowMapAllocator, %arg(Urho3D::SamplerStateDesc), SamplerStateDesc, GetSamplerStateDesc);
%csattribute(Urho3D::ShadowMapAllocator, %arg(Urho3D::PipelineStateOutputDesc), ShadowOutputDesc, GetShadowOutputDesc);
%csattribute(Urho3D::StereoRenderPipelineView, %arg(Urho3D::RenderPipelineSettings), Settings, GetSettings, SetSettings);
%csattribute(Urho3D::ToneMappingPass, %arg(Urho3D::RenderOutputFlags), ExecutionFlags, GetExecutionFlags);
